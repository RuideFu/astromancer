@import "src/styles.scss";

.page-container {
  display: flex;
  flex-direction: row;
  height: calc(100vh - 7%); 
  padding: 2.5%;
  box-sizing: border-box;
}

.left-container {
  flex: 0 0 47.5%; 
  height: 100%;
  padding: 0;
  margin-right: 2.5%;
}

.right-container {
  flex: 1;
  display: flex;
  flex-direction: column; /* Let children stack vertically */
  max-height: calc(100vh - 70%); /* Ensure it takes up remaining space */
  overflow-y: auto; /* Enable scrolling when content overflows */
  padding: 0;

  border-style: solid;
  border-width: 4px;
}

.mat-elevation-z8 {
  flex: 1; /* Allow it to grow within the right-container */
  overflow-y: auto; /* Ensure it can scroll */
  box-shadow: none;
}

.table-wrapper {
  flex: 1; /* Ensure it fills available space */
  overflow-y: auto; /* Ensure table can scroll when content overflows */
}

.drop-zone {
  z-index: 0;
  height: 100%;
  width: 100%;
  border-width: 6px;
  border-style: dashed;
  opacity: 0.5;

  align-items: center;
  justify-content: center;
}

.click-zone {
  z-index: 1;
  border-style: solid;
  border-width: 4px;
  width: min-content !important;
  padding: 20px;

  align-items: center;
  justify-content: center;
  text-align: center;
}

.click-zone:hover {
  transform: scale(1.1);
  cursor: pointer;
}

.mat-table {
  width: 100%;
}

.mat-header-cell {
  position: sticky;
  top: 0; /* Stick to the top of the container */
  background-color: #f5f5f5; /* Ensure background doesn't scroll with content */
  z-index: 1; /* Ensure header stays above table rows */
}

/* Apply space between header row and first row */
.mat-header-row {
  background-color: #f5f5f5; /* Customize header background color */
  margin-bottom: 10px !important; /* Force margin-bottom between header and first row */
  border-bottom: 2px solid #e0e0e0; /* Optional: Add border to visually separate the header */
}

/* Style for odd rows */
.odd-row {
  background-color: #ffffff; /* Background color for odd rows */
}

/* Style for even rows */
.even-row {
  background-color: #f0f0f0; /* Background color for even rows */
}

/* Hover effect for all rows */
.mat-row:hover {
  background-color: #d9edf7 !important; /* Lighter color on hover */
}

.bottom-left-info {
  position: absolute;
  bottom: 3%; /* Keep existing bottom margin */
  left: 50%; /* Keep existing left margin */
  background-color: #f5f5f5;
  padding: 2.5%;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  width: 47%; /* Keep existing width */
  font-size: 14px;
  z-index: 1000; /* Ensure it stays on top of other elements */
  
  max-height: 40vh; /* Limit the height to 40% of the viewport */
  overflow-y: auto; /* Enable vertical scrolling if content exceeds max height */
}

.bottom-left-info h4 {
  margin: 0 0 10px 0;
}

.prompt-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  width: 100%;
}

.prompt {
  display: flex;
  z-index: 0;
  text-align: center;
  height: min-content;
  width: max-content;
  margin-top: 10px;
}

.fileOver {
  animation: shake 1s;
  animation-iteration-count: infinite;
}

/* Shake animation */
@keyframes shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }

  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }

  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }

  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }

  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }

  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }

  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }

  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }

  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

.big-title {
  width: max-content;
  height: min-content;
  justify-content: center;
}

.big-icon {
  font-size: 80px;
  width: min-content;
  height: min-content;
  justify-content: center;
}

.LIGHT_THEME {
  :host .drop-zone {
    border-color: map_get($light-primary, 500);
    background-color: map_get($light-primary, 100);
  }

  :host .click-zone {
    border-color: map_get($light-primary, 500);
  }

  :host h5 {
    color: map_get($light-primary, 300);
  }

  :host a {
    color: map_get($light-primary, 400);
  }

  :host .right-container {
    border-color: map_get($light-primary, 300);
  }
}

.DARK_THEME {
  :host .drop-zone {
    border-color: map_get($dark-primary, 500);
    background-color: map_get($light-primary, 900);
  }

  :host .click-zone {
    border-color: map_get($dark-primary, 500);
  }

  :host h5 {
    color: map
  }

  :host a {
    color: map_get($dark-primary, 400);
  }
}